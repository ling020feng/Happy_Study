1、问题引入
	计算机是做什么的？
	做计算的机器 
	计算针对的是数据来说的，计算是对数据的处理，而数据在计算机中需要存储起来
	存放数据需要知道数据的属性和数据的大小
	数据的属性和大小就是”数据类型“需要关注的事情
	
2、c语言的数据类型
	c语言的数据类型分为四类
	（1）基本数据类型：c语言标准中已经规定好可以直接使用的数据类型
		整型：用来存放整数的数据类型，是由一串数字组成的[0-9] 
			以32bits的系统来说
			signed int/unsigned int   有符号整形和无符号整形 32bits，4个字节
			signed short/unsigned short  有(无)符号短整型 16bits,2个字节
			signed long/unsigned long   有(无)符号长整形 64bits，8个字节
			
			signed/unsigned表示有/无符号，决定了数据类型的取值范围
			如果是有符号的数据类型，则最高位为符号位，其余为数据位
			如果是无符号的数据类型，则所有位全是数据位
			signed int的取值范围是：-2^31 ~ +2^31-1
			unsigned int的取值范围是：0 ~ 2^32-1
			
		字符型：
			signed char/unsigned char 有（无）符号字符型 8bits,1个字节
			有符号 -128 ~ +127
			无符号 0~255
			
		浮点型
			signed float/unsigned float 单精度浮点型 32bits，4个字节
			signed double/unsigned double 双精度浮点型 64bits，8个字节
			
	计算机存放数据都是一些高低电平，也就是二进制数
	整形数据在内存中的存放以补码的形式存放
	比如存放 int a = 5;
		如果是有符号的数存放
			正数：直接存放数据类型大小个高低电平
				5：
				0000 0000 0000 0000 0000 0000 0000 0101
			负数：存放的是绝对值的反码再加1
				-5：
				|-5|:5
				0000 0000 0000 0000 0000 0000 0000 0101
				取反：高电平（1）变低电平（0）
				1111 1111 1111 1111 1111 1111 1111 1010
				再加1：
				1111 1111 1111 1111 1111 1111 1111 1011 (-5)
				
			有符号的负数在内存中的存放与一个较大的数在内存中的存放一致
			比如 2^32在内存中的存放
			  1 0000 0000 0000 0000 0000 0000 0000 0000
				2^32-5在内存中的存放
				5：
				0000 0000 0000 0000 0000 0000 0000 0101
				2^32 - 5
				1111 1111 1111 1111 1111 1111 1111 1011	
				
		其实，在CPU中是没有符号的概念的，所谓的有无符号，
			是要看编译器对关键字的解释
				
	（2）构造型数据类型：开发人员自行定义的数据类型
	（3）指针型数据类型：后面再说
	（4）void型数据类型：空类型
	
	
	
作业：
	1、在32位的系统中，int的下列问题          0000 0000 0000 0000 0000 0000 0000 0111
		-7与那个正数存放相同              1111 1111 1111 1111 1111 1111 1111 1001
		-37与那个正数存放相同             0000 0000 0000 0000 0000 0000 0010 0101   1111 1111 1111 1111 1111 1111 1101 1011
		-69							
		-71
		....
	2、对于32位系统的int型，打印下列结果
		unsigned int a = -7;
		printf("%d\n",a); -7
		printf("%u\n",a); 4294967289
		
	3、计算
		int a = -4;
		unsigned int b = 4294967292;
		if(a == b)
		{
			printf("hehe\n");
		}
		else
		{
			printf("ni dong de\n");
		}