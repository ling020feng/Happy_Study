1、前言
	在c语言中数据的对象分为两类
	变量、常量
	
2、常量：在程序运行过程中，不会改变的数据量被称为常量
	常量的类型分为以下四种：
	(1)整型:代码中代表常量的值,由一串数字字符串组成
			八进制整型       
				以0开头的表示八进制
			十六进制整型
				以0X/0x开头的表示十六进制
			十进制整型
				除以上两种，都是十进制
				
		为什么没有二进制整型呢？
		八进制和十六进制可以很方便的转换成二进制，所以在计算机中
		没有二进制整型
		八进制转二进制：一个八进制数占3位二进制数
			比如 0123
			001 010 011
		十六进制转二进制：一个十六进制数占4位二进制数
			比如：0xabcdef
			1010 1011 1100 1101 1110 1111
		十进制转二进制：
			比如：123，除2取余法
			
	(2)字符型：在c语言中，用单引号引起来的，表示一个字符
				用双引号引起来的，表示一个字符串（一串字符）
			在计算的存储中，是不会存储“形状”的，存储的是该字符
			对应的ASCII码
			一个字符对于的ASCII表达形式有3种
			八进制  十进制  十六进制
			
			比如：062   50    32 表示同一个字符'2'
			'\0'表示一个字符串的结束，是空的
		字符可以分为
			普通字符：可以打印的，具有字符本身形状的字符
				'a'
				'0'
				'_'
		
			转义字符：不能打印本身，其字符是具有特殊含义的
				在c语言中，利用‘\’和'%'进行转义
				'\n'：换行符，打印出来的效果是产生新的一行
				'\t'：横向制表符，打印出来的是横向一个TAB键
				'\v'：列向制表符，打印出来的是纵向的一个TAB键
				'\b'：退格符，打印的效果等同于backspace
				...
				
				'%d':表示匹配一个十进制整型数，
					常用来输入/输出
				'%x':表示匹配一个十六进制的整型数，
					常用来将一个数以十六进制输入/输出
				'%c':表示匹配一个字符
				'%u':表示匹配一个无符号的十进制整型
					常用来将一个数以无符号十进制输入输出
				‘%s’：表示匹配一个字符串
				'%p':表示匹配一个地址，输入/输出的形式与%x非常类似
			
		\000:表示1~3位八进制数，用来代替一个字符
		\x00：表示1~2位十六进制数，用来代替一个字符		
		
	(3)浮点型
		小数形式表达：151.123
		指数形式表达（科学计数法）： e/E
			1e3
			3.34e-5
			-7.89e9f
			...
			注意：
			1、在表示浮点型时，c语言语序在后面加上标示符
				f/F  表示单精度浮点型
				d/D  表示双精度浮点型
				如果没有加标示符，系统默认位双精度浮点型
			2、数字部分可以省略整数部分 或 小数部分 
				但是不能同时省略两个部分
				.34e5
				1e3
				
				e3     这个是错的，因为两个部分都省略的话，
					我怎么知道是什么鬼东西
					
	(4)枚举型:后面再讲

3、变量：在程序运行中，可以通过赋值等方式改变的数据量被称为变量
	变量的定义方式：
		
		数据类型 变量名；
		比如说：int a;
				char c;
				short s;
				...
				
		一般在定义变量时会对变量赋予初始值，这称为变量的初始化
		比如  int a = 0;
			  char s[100] = {0};
		
	变量：每一个变量都会在内存中对应一个存储单元
			该存储单元的大小，就是数据类型的长度
			
	定义一个变量其实就是在内存中命名了一个数据类型大小的空间
	给变量赋值其实就是将数据存放到该存储空间中
			
			
	变量是一个可以改变的量，变量所对应的空间必须是可读可写的
	
	变量名：分配出来的存储单元的名称
	变量值：存储在该存储单元内的值
	存储单元：用来保存变量值的内存地址
	
	变量名也是需要存储单元的---》也就是说变量名也拥有一个地址
	
	
	在c语言中规定了，变量的命名要满足标示符的规范命名
		标示符包括：变量名、数组名、函数名、结构体名。。。。
		标示符的规范命名：只能由 a~z A~Z 0~9 _组成
				并且，命名的首字符只能是字母或下划线
				
变量的访问：
	定义变量：
	int main(void)
	{
		int a = 5;
		a = 1024;
		int b = a*8;
	}
		
	请问：以上3个a代表的含义一样吗？
		答案是：不一样的！
	第一个a 和 第二个a的含义一致，都是表示分配出来的那个名叫‘a’的存储单元
	第三个a的含义是名叫'a'的那个存储单元中存储的数据
	
	在c语言中，变量名具有两层含义
		（1） 表示变量的值 rvalue: readable value 右值  a*8
		（2） 表示变量的地址 lvalue:location value 左值 a = 5; a = 1024;
		右值：变量名位于赋值号（=）右侧的时候
		左值：变量名位于复制号（=）左侧的时候
			
			
			
	思考：
		1、
			int a = 13579;
			int b = 24680;
			问：以上两个变量对应的 十六进制和八进制各是多少
			
		2、
			int a = 77;  -> 0~ 0100 1101
			int b = 0xfcea; -> 0~ 1111 1100 1110 1010
			char c = a;  --> 0100 1101
			char d = b;  --> 1110 1010
			问：c和d各自的十六进制是多少
			
		3、char c = -5; 1111 1011
			c = 255;
			int a = c; ~~~ 1111 1011
					~处  0？
						 1？
						 什么都不是？
			问 a = ?
	
	
c语言整数的赋值问题：c标准提供	
	长型数据赋值给短型数据：
		保留低位，舍弃高位！
		比如 int b = 0xfcea;
			char d = b;
			此时：d应该等于 0xea
			
	短型数据赋值给长型数据:需要补足长型的数据位
		如果短型是有符号的，那么赋值给长型以后，高位全部补符号位
		如果短型是无符号的，那么赋值给长型后，高位全部补0
	
	char c = -5;
	int a = c;
		char型-5:
			1111 1011
		a = c; ----> -5
		1111 1111 1111 1111 1111 1111 1111 1011  --->int型 -5
		
		
		c = 255；
		1111 1111
		a = c;
		1111 1111 1111 1111 1111 1111 1111 1111 ---->int 型 -1
		
		unsigned char b = 255;
		1111 1111
		int a = b; ---> 255
		0000 0000 0000 0000 0000 0000 1111 1111
		
		
		char c = 0xfc; //1111 1011 
		unsigned int a = c; //0xfffffffc
		
		
		
		-4
		绝对值原码
		0000 0100
		取反+1                    转换位16进制
		1111 1011+1---> 1111 1100 --> 0xfc ---> 2^8-4 ---->  2^32-4



		
总结：
	1、数据类型：基本数据类型
					signed                   unsigned
	char         -128 ~ 127 				  0~255
	short		 -2^15 ~ 2^15-1               0~2^16-1 
	int			 -2^31 ~ 2^31-1				  0~2^32-1		
	long		 -2^63 ~ 2^63-1				  0~2^64-1
	float		 
	double
	
	void:可以用在三个地方：
		函数返回值：表示不要返回值
		函数参数： 表示该函数不需要参数
		void*：想一下O型血
			void*被称为通用型指针，可以赋值给任意类型的指针
			但只能接受void*型指针
	
	2、数据在内存中的存储模式
		所有数据在计算机中的存放都是以二进制形式的数据存储
		所谓的有无符号只是编译器的解释不同
		正数的存储：
			存放的是原码：该数对应的二进制
		负数的存储：
			存放的是绝对值的原码取反加1
		字符的存储：
			字符存储的是该字符对应的ascii数值
					
	3、常量
		在程序运行过程中不会改变的量
		整型：
			十进制 
			八进制  以0开头   %o
			十六进制 以0x/0X  %x
		字符型：用单引号引起来的是字符，
			由于存在ascii，也可以用整数表示字符
			普通字符
			转义字符（特殊字符）
		浮点型：小数点模式   指数模式   f/F d/D


	4、变量
		变量名：用来标示分配出来的那个存在空间的名称
		变量值：存储在该存储单元内的值
		变量地址：
			左值：表示的是变量的地址 
			右值：变量地址中存放的数据
	
	5、整数之间的赋值
		长型赋值给短型：取低位数据
		短型赋值给长型：短型有符号 高位补符号位
						短型无符号 高位补0
						
	main函数在linux中的特殊格式
	int main(int argc,char *argv[])
		argc:参数个数
		argv：存放所有传入的参数
			argv[0]--->第一个参数，一般是 ./a.out
			...
	
float字符型
小数部分*2取整

void使用
1、函数参数部分时，表示函数不需要函数参数
2、函数返回值类型，表示函数不需要返回值
3、

atoi（）函数
用于将数字字符串打印成整型数

转义字符：不能打印本身，其字符是具有特殊含义的
     		在c语言中，利用‘\’和'%'进行转义
		'\n'：换行符，打印出来的效果是产生新的一行
		'\t'：横向制表符，打印出来的是横向一个TAB键
		'\v'：列向制表符，打印出来的是纵向的一个TAB键
		'\b'：退格符，打印的效果等同于backspace
				...
				
			'%d':表示匹配一个十进制整型数，
					常用来输入/输出
			'%x':表示匹配一个十六进制的整型数，
					常用来将一个数以十六进制输入/输出
			'%c':表示匹配一个字符
			'%u':表示匹配一个无符号的十进制整型
					常用来将一个数以无符号十进制输入输出
				‘%s’：表示匹配一个字符串
				'%p':表示匹配一个地址，输入/输出的形式与%x非常类似

在c语言中规定了，变量的命名要满足标示符的规范命名
		标示符包括：变量名、数组名、函数名、结构体名。。。。
		标示符的规范命名：只能由 a~z A~Z 0~9 _组成
				并且，命名的首字符只能是字母或下划线



长型数据赋值给短型数据：
		保留低位，舍弃高位！
短型数据赋值给长型数据:需要补足长型的数据位
		如果短型是有符号的，那么赋值给长型以后，高位全部补符号位
		如果短型是无符号的，那么赋值给长型后，高位全部补0		